# This is ".github/workflows/gh-pages.yml" file.
# This is an EXAMPLE of "GitHub Actions Workflow file".

name: github pages

on:
  push:
    branches:
      - master

jobs:
  deploy:

    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - uses: actions/checkout@v4

      # Install .NET SDK
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Install .NET WebAssembly Tools
        run: dotnet workload install wasm-tools

      # Publish the site
      - name: Publish
        # run: dotnet publish BlHell-per.sln -c:Release -o:publish -p:GHPages=true
        run: dotnet publish BlHell-per.csproj -c:Release -o:publish -p:GHPages=true


      # Deploy the site
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: publish/wwwroot
          force_orphan: true

      #PWA-hash ivalidate
      - name: Fix service-worker-assets.js hashes
        working-directory: release/wwwroot
        run: |
            jsFile=$(<service-worker-assets.js)
            # remove JavaScript from contents so it can be interpreted as JSON
            json=$(echo "$jsFile" | sed "s/self.assetsManifest = //g" | sed "s/;//g")
            # grab the assets JSON array
            assets=$(echo "$json" | jq '.assets[]' -c)
            for asset in $assets
            do
                oldHash=$(echo "$asset" | jq '.hash')
                #remove leading and trailing quotes
                oldHash="${oldHash:1:-1}"
                path=$(echo "$asset" | jq '.url')
                #remove leading and trailing quotes
                path="${path:1:-1}"
                newHash="sha256-$(openssl dgst -sha256 -binary $path | openssl base64 -A)"
          
                if [ $oldHash != $newHash ]; then
                    # escape slashes for json
                    oldHash=$(echo "$oldHash" | sed 's;/;\\/;g')
                    newHash=$(echo "$newHash" | sed 's;/;\\/;g')
                    echo "Updating hash for $path from $oldHash to $newHash"
                    # escape slashes second time for sed
                    oldHash=$(echo "$oldHash" | sed 's;/;\\/;g')
                    jsFile=$(echo -n "$jsFile" | sed "s;$oldHash;$newHash;g")
                fi
            done

            echo -n "$jsFile" > service-worker-assets.js
      #Ensure use index.html
      - name: copy index.html to 404.html
        run: cp release/wwwroot/index.html release/wwwroot/404.html

      #Allow underscore 
      - name: Add .nojekyll file
        run: touch release/wwwroot/.nojekyll
    